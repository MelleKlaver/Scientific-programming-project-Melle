DV <- names(Offensive_gamelog_QB)[i]
IV <- "QB_Age"
# Fit the regression model
model <- lm(paste(DV, "~", IV), data = Offensive_gamelog_QB)
# Extract relevant information
intercept <- coef(model)[1]
coefficient <- coef(model)[2]
p_value <- summary(model)$coefficients[2, 4]
adj_r_2 <- summary(model)$adj.r.squared
# Add results to the dataframe
result_row <- data.frame(DV, IV, intercept, coefficient, p_value, adj_r_2)
regression_results <- rbind(regression_results, result_row)
}
# Print or analyze the regression results
print(regression_results)
View(Quarterback_gamelogs)
str(Offensive_gamelog_QB)
str(Offensive_gamelog_QB)
Career_stats$Wins[is.na(Career_stats$Wins)] = 0
Career_stats$WinPercentage = floor(Career_stats$Wins/Career_stats$Amount_of_games *100)
Career_stats$Passer.Rating2.0 = calculate_passer_rating2.0(Career_stats$Passes.Completed,Career_stats$Passes.Attempted, Career_stats$Passing.Yards, Career_stats$TD.Passes, Career_stats$Ints, Career_stats$Sacks, Career_stats$Sacked.Yards.Lost, Career_stats$Rushing.Attempts, Career_stats$Rushing.Yards, Career_stats$Fumbles, Career_stats$Fumbles.Lost)
Career_stats$games_group = cut(Career_stats$Amount_of_games,
breaks = c(-Inf, 10, 150, Inf),
labels = c("Below 10", "10-150", "Above 150"))
color_mapping = c("Below 10" = "black", "10-150" = "blue", "Above 150" = "red")
ggplot(Career_stats, aes(x = WinPercentage, y = Passer.Rating2.0, color = games_group)) +
geom_point() +
scale_color_manual(values = color_mapping) +
labs(x = "WinPercentage", y = "Passer.Rating2.0") +
ggtitle("Scatter Plot of Passer Rating vs. Win Percentage")
View(Career_stats)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
library(knitr)
# Create an empty data frame to store results
regression_results <- data.frame()
# Create a loop for all statistics of interest
Stats_of_Interest <- c(9:20, 23:32, 34:43, 45:52)
for (i in Stats_of_Interest) {
DV <- "Offensive.Points"
IV <- names(Offensive_gamelog_Combined)[i]
# Fit the regression model
model <- lm(paste(DV, "~", IV), data = Offensive_gamelog_Combined)
# Extract relevant information
intercept <- coef(model)[1]
coefficient <- coef(model)[2]
p_value <- summary(model)$coefficients[2, 4]
adj_r2 <- summary(model)$adj.r.squared
# Add results to the data frame
result_row <- data.frame(IV, coefficient, intercept, p_value, adj_r2)
regression_results <- rbind(regression_results, result_row)
}
# Round the numeric columns
regression_results$intercept <- round(regression_results$intercept, digits = 3)
regression_results$coefficient <- round(regression_results$coefficient, digits = 3)
regression_results$adj_r2 <- round(regression_results$adj_r2, digits = 3)
# Order the results by adj_r2 in descending order
regression_results <- regression_results[order(-regression_results$adj_r2), ]
# Print the regression results as a table using kable
kable(regression_results, format = "markdown", col.names = c("IV", "Coefficient", "Intercept", "P-Value", "Adj. R-squared"))
# Create a bar chart using ggplot2
library(ggplot2)
ggplot(head(regression_results, 10), aes(x = reorder(IV, -adj_r2), y = adj_r2)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Adj. R-squared", title = "What stat is the best predictor for offensive output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
This code will format your regression results table using kable and create a bar chart with ggplot2. You can adjust the formatting and styling as needed to match your preferences.
kable(regression_results, format = "markdown", col.names = c("IV", "Coefficient", "Intercept", "P-Value", "Adj. R-squared"))
# Create a bar chart using ggplot2
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
# Original model
model <- lm(formula, data = Offensive_gamelog_Combined)
adj_r_squared_original <- summary(model)$adj.r.squared
# Initialize a data frame to store results
contribution_results <- data.frame(
IV = independent_variables,
Change_in_Adj_R_Squared = NA
)
# Calculate the change in Adj. R-squared for each variable
for (i in 1:length(independent_variables)) {
IV_to_remove <- independent_variables[i]
# Create a new formula with the IV removed
formula_updated <- as.formula(paste(dependent_variable, "~", paste(independent_variables[-i], collapse = " + ")))
# Fit the model with the IV removed
model_updated <- lm(formula_updated, data = Offensive_gamelog_Combined)
# Calculate the Adj. R-squared of the updated model
adj_r_squared_updated <- summary(model_updated)$adj.r.squared
# Calculate the change in Adj. R-squared
change_in_adj_r_squared <- adj_r_squared_original - adj_r_squared_updated
contribution_results$Change_in_Adj_R_Squared[i] <- change_in_adj_r_squared
}
# Print or analyze the results
print(contribution_results)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
model <- lm(formula = Offensive.Points ~ independent_variables, data = Offensive_gamelog_Combined)
model <- lm(formula, data = Offensive_gamelog_Combined)
View(model)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
for (i in Stats_of_Interest) {
DV = "Offensive.Points"
IV = names(Offensive_gamelog_Combined)[i]
# Fit the regression model
model <- lm(paste(DV, "~", IV), data = Offensive_gamelog_Combined)
# Extract relevant information
intercept <- coef(model)[1]
coefficient <- coef(model)[2]
p_value <- summary(model)$coefficients[2, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Add results to the dataframe
result_row <- data.frame(IV, intercept, coefficient, p_value, adj_r_squared)
regression_results_Offense <- rbind(regression_results_Offense, result_row)
}
# Round, order and print the regression results
regression_results_Offense$intercept = round(regression_results_Offense$intercept, digits = 3)
regression_results_Offense$coefficient = round(regression_results_Offense$coefficient, digits = 3)
regression_results_Offense$adj_r_squared = round(regression_results_Offense$adj_r_squared, digits = 3)
regression_results_Offense = regression_results_Offense[order(-regression_results_Offense$adj_r_squared), ]
print(regression_results_Offense)
# Create a bar chart using ggplot2
ggplot(head(regression_results_Offense, 10), aes(x = reorder(IV, -adj_r_squared), y = adj_r_squared)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Statistics", y = "adj_r_squared", title = "What stat has the biggest effect on offensive output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
result_summary$intercept = round(result_summary$intercept, digits = 3)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
result_summary$intercept = round(result_summary$intercept, digits = 3)
str(result_summary)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r_squared <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r_squared
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$coefficient, digits = 3)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R2 = adj_r2
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
adj_R2 = adj_r2
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
View(result_summary)
str(result_summary)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
adj_r2 = adj_r2
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
result_summary = result_summary[order(-result_summary$adj_r2), ]
knitr::kable(result_summary, row.names = FALSE, format = "markdown")
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
adj_r2 = adj_r2
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
result_summary = result_summary[order(-result_summary$P_Value), ]
knitr::kable(result_summary, row.names = FALSE, format = "markdown")
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste("Offensive.Points ~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
adj_r2 = adj_r2
)
# Print or analyze the results
print(result_summary)
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
result_summary = result_summary[order(-result_summary$P_Value), ]
knitr::kable(result_summary, row.names = FALSE, format = "markdown")
# Create a bar chart using ggplot2
ggplot(head(result_summary, 10), aes(x = reorder(independent_variables, -adj_r2), y = adj_r2)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Adj_r_squared", title = "What stat is the best predictor for offensive output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r2  # Changed to match the variable name you used later
)
# Round, order, and print the regression results
result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
result_summary <- result_summary[order(-result_summary$P_Value), ]
# Print the summary table
print(result_summary)
# Create a bar chart using ggplot2
library(ggplot2)
ggplot(head(result_summary, 10), aes(x = reorder(IV, -Adj_R_Squared), y = Adj_R_Squared)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Adj_r_squared", title = "What stat is the best predictor for offensive output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
result_summary$coefficient = round(result_summary$Coefficient, digits = 3)
result_summary$adj_r2 = round(result_summary$adj_r2, digits = 3)
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r2  # Changed to match the variable name you used later
)
# Round, order, and print the regression results
result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
result_summary <- result_summary[order(-result_summary$P_Value), ]
# Print the summary table
print(result_summary)
# Create a bar chart using ggplot2
library(ggplot2)
ggplot(head(result_summary, 10), aes(x = reorder(IV, -Adj_R_Squared), y = Adj_R_Squared)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Adj_r_squared", title = "What stat is the best predictor for offensive output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(model)
f_statistic <- model_summary$fstatistic
f_statistic <- model$fstatistic
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r2  # Changed to match the variable name you used later
)
# Initialize a vector to store the part R-squared values
part_r_squared <- numeric(length(independent_variables))
# Loop through the independent variables and calculate part R-squared
for (i in 1:length(independent_variables)) {
IV_to_remove <- independent_variables[i]
# Fit the model without the current variable
reduced_formula <- as.formula(paste(dependent_variable, "~", paste(setdiff(independent_variables, IV_to_remove), collapse = " + ")))
reduced_model <- lm(reduced_formula, data = Offensive_gamelog_Combined)
# Calculate the change in R-squared when the variable is removed
delta_r_squared <- total_r_squared - summary(reduced_model)$r.squared
# Calculate the part R-squared for the current variable
part_r_squared[i] <- delta_r_squared
}
dependent_variable <- "Offensive.Points"
independent_variables <- names(Offensive_gamelog_Combined)[Stats_of_Interest]
# Construct the formula for multivariate regression
formula <- as.formula(paste(dependent_variable, "~", paste(independent_variables, collapse = " + ")))
# Fit the multivariate linear regression model
model <- lm(formula, data = Offensive_gamelog_Combined)
# Extract relevant information
coefficients <- coef(model)[-1]  # Exclude the intercept
p_values <- summary(model)$coefficients[-1, 4]
adj_r2 <- summary(model)$adj.r.squared
# Create a summary dataframe
result_summary <- data.frame(
IV = independent_variables,
Coefficient = coefficients,
P_Value = p_values,
Adj_R_Squared = adj_r2  # Changed to match the variable name you used later
)
# Initialize a vector to store the part R-squared values
part_r_squared <- numeric(length(independent_variables))
# Loop through the independent variables and calculate part R-squared
for (i in 1:length(independent_variables)) {
IV_to_remove <- independent_variables[i]
# Fit the model without the current variable
reduced_formula <- as.formula(paste(dependent_variable, "~", paste(setdiff(independent_variables, IV_to_remove), collapse = " + ")))
reduced_model <- lm(reduced_formula, data = Offensive_gamelog_Combined)
# Calculate the change in R-squared when the variable is removed
delta_r_squared <- Adj_R_Squared - summary(reduced_model)$r.squared
# Calculate the part R-squared for the current variable
part_r_squared[i] <- delta_r_squared
# Add part R-squared values to the result_summary dataframe
result_summary$Part_R_Squared <- part_r_squared
# Round, order, and print the updated regression results
result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
result_summary$Part_R_Squared <- round(result_summary$Part_R_Squared, digits = 3)
result_summary <- result_summary[order(-result_summary$Part_R_Squared), ]
knitr::kable(result_summary, row.names = FALSE, format = "markdown")
# Create a bar chart to visualize the part R-squared values
ggplot(head(result_summary, 10), aes(x = reorder(IV, -Part_R_Squared), y = Part_R_Squared)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Part R-squared", title = "Individual Contribution of Variables to Offensive Output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Round, order, and print the regression results
#result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
#result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
#result_summary <- result_summary[order(-
View(result_summary)
# Add part R-squared values to the result_summary dataframe
result_summary$Part_R_Squared <- part_r_squared
# Round, order, and print the updated regression results
result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
result_summary$Part_R_Squared <- round(result_summary$Part_R_Squared, digits = 3)
result_summary <- result_summary[order(-result_summary$Part_R_Squared), ]
knitr::kable(result_summary, row.names = FALSE, format = "markdown")
# Create a bar chart to visualize the part R-squared values
ggplot(head(result_summary, 10), aes(x = reorder(IV, -Part_R_Squared), y = Part_R_Squared)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Variables", y = "Part R-squared", title = "Individual Contribution of Variables to Offensive Output") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Round, order, and print the regression results
#result_summary$Coefficient <- round(result_summary$Coefficient, digits = 3)
#result_summary$Adj_R_Squared <- round(result_summary$Adj_R_Squared, digits = 3)
#result_summary <- result_summary[order(-
View(variables_of_interest)
