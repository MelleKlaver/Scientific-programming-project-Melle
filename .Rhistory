# Define the maximum values for each component
max_COMP <- 77
max_ATT <- 100
max_YDS <- 281.4
max_TD <- 20
max_INT <- 2.375
# Calculate the four components of the passer rating
a <- ((COMP / ATT) - 0.3) * 5
b <- ((YDS / ATT) - 3) * (0.25)
c <- (TD / ATT) * (20)
d <- 2.375 - ((INT / ATT) * (25))
# Ensure that the components are within the allowed range
a <- pmax(pmin(a, max_COMP), 0)
b <- pmax(pmin(b, max_YDS), 0)
c <- pmax(pmin(c, max_TD), 0)
d <- pmax(pmin(d, max_INT), 0)
# Ensure that a,b,c&d are below 2.375
a <- pmin(a, 2.375)
b <- pmin(b, 2.375)
c <- pmin(c, 2.375)
d <- pmax(d, 0)
# Calculate the passer rating
passer_rating <- ((a + b + c + d) / 6) * 100
return(passer_rating)
}
Quarterback_gamelogs$Passer.Rating2 = calculate_passer_rating(Quarterback_gamelogs$Passes.Completed,Quarterback_gamelogs$Passes.Attempted, Quarterback_gamelogs$Passing.Yards, Quarterback_gamelogs$TD.Passes, Quarterback_gamelogs$Ints)
Career_stats <- Quarterback_gamelogs %>%
group_by(Name) %>%
summarise(
Wins = sum(Outcome == "W"),
Amount_of_games = n(),
Passing.Yards = sum(Passing.Yards),
Passes.Completed = sum(Passes.Completed),
Passes.Attempted = sum(Passes.Attempted),
Ints = sum(Ints),
TD.Passes = sum(TD.Passes),
Offensive.Points = mean(Offensive.Points)
) %>%
filter(Amount_of_games>=5)
Career_stats$Wins[is.na(Career_stats$Wins)] = 0
Career_stats$WinPercentage = floor(Career_stats$Wins/Career_stats$Amount_of_games *100)
Career_stats$Passer.Rating = calculate_passer_rating(Career_stats$Passes.Completed,Career_stats$Passes.Attempted, Career_stats$Passing.Yards, Career_stats$TD.Passes, Career_stats$Ints)
Career_stats$games_group = cut(Career_stats$Amount_of_games,
breaks = c(-Inf, 10, 150, Inf),
labels = c("Below 10", "10-150", "Above 150"))
color_mapping = c("Below 10" = "black", "10-150" = "blue", "Above 150" = "red")
ggplot(Career_stats, aes(x = WinPercentage, y = Passer.Rating, color = games_group)) +
geom_point() +
scale_color_manual(values = color_mapping) +
labs(x = "WinPercentage", y = "Passer.Rating") +
ggtitle("Scatter Plot of Passer Rating vs. Win Percentage")
View(Age_stats_QB)
#SCIENTIFIC PROGRAMMING
#Melle Klaver
#Using the packages
library(dplyr)
library(tidyr)
library(ggplot2)
#Setting up the data and importing the files
setwd("C:/Users/MK122/OneDrive/Bureaublad/School/Systems Biology/Scientific programming/NFL database")
Quarterback_gamelogs = read.csv("Game_Logs_Quarterback.csv")
Basic_stats = read.csv("Basic_stats.csv")
Runningback_gamelogs = read.csv("Game_Logs_Runningback.csv")
WideReceiver_gamelogs = read.csv("Game_Logs_Wide_Receiver_and_Tight_End.csv")
Kicker_gamelogs = read.csv("Game_Logs_Kickers.csv")
#Setting all numbers in the data to numeric
Numeric_Columns_QB_Gamelogs = c(4,6,12:29)
Quarterback_gamelogs[Numeric_Columns_QB_Gamelogs] = lapply(Quarterback_gamelogs[Numeric_Columns_QB_Gamelogs], as.numeric)
Numeric_Columns_RB_Gamelogs = c(4,6,12:25)
Runningback_gamelogs[Numeric_Columns_RB_Gamelogs] = lapply(Runningback_gamelogs[Numeric_Columns_RB_Gamelogs], as.numeric)
Numeric_Columns_WR_Gamelogs = c(4,6,12:25)
WideReceiver_gamelogs[Numeric_Columns_RB_Gamelogs] = lapply(WideReceiver_gamelogs[Numeric_Columns_WR_Gamelogs], as.numeric)
Numeric_Columns_K_Gamelogs = c(4,6,12:27)
Kicker_gamelogs[Numeric_Columns_RB_Gamelogs] = lapply(Kicker_gamelogs[Numeric_Columns_K_Gamelogs], as.numeric)
#Adding the age of the Quarterback during each game
Basic_stats$Birthyear = substring(Basic_stats$Birthday, regexpr("/", Basic_stats$Birthday) + 1)
Basic_stats$Birthyear = as.numeric(substring(Basic_stats$Birthyear, regexpr("/", Basic_stats$Birthyear) + 1))
Quarterback_gamelogs = left_join(Quarterback_gamelogs, Basic_stats %>% select(Player.Id, Birthyear), by = "Player.Id")
Quarterback_gamelogs$Age =  Quarterback_gamelogs$Year - Quarterback_gamelogs$Birthyear
Runningback_gamelogs = left_join(Runningback_gamelogs, Basic_stats %>% select(Player.Id, Birthyear), by = "Player.Id")
Runningback_gamelogs$Age =  Runningback_gamelogs$Year - Runningback_gamelogs$Birthyear
WideReceiver_gamelogs = left_join(WideReceiver_gamelogs, Basic_stats %>% select(Player.Id, Birthyear), by = "Player.Id")
WideReceiver_gamelogs$Age =  WideReceiver_gamelogs$Year - WideReceiver_gamelogs$Birthyear
Kicker_gamelogs = left_join(Kicker_gamelogs, Basic_stats %>% select(Player.Id, Birthyear), by = "Player.Id")
Kicker_gamelogs$Age =  Kicker_gamelogs$Year - Kicker_gamelogs$Birthyear
#Removes games where the QB didnt actually play
Quarterback_gamelogs = filter(Quarterback_gamelogs, Passes.Attempted>0)
Quarterback_gamelogs = filter(Quarterback_gamelogs, Season=="Regular Season")
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
Quarterback_gamelogs <- Quarterback_gamelogs %>%
mutate_if(~!is.list(.), ~ifelse(is.na(.), 0, .))
#Removes games where the RB didnt actually play
Runningback_gamelogs = filter(Runningback_gamelogs, Rushing.Attempts>0)
Runningback_gamelogs = filter(Runningback_gamelogs, Season=="Regular Season")
#Removes games where the WR didnt actually play
WideReceiver_gamelogs = filter(WideReceiver_gamelogs, Receptions>0)
WideReceiver_gamelogs = filter(WideReceiver_gamelogs, Season=="Regular Season")
#Removes games where the K didnt actually play
Kicker_gamelogs = filter(Kicker_gamelogs, FGs.Attempted>0 | Extra.Points.Attempted>0)
Kicker_gamelogs = filter(Kicker_gamelogs, Season=="Regular Season")
# Creates gamelog of every offensive play
Sum_Columns_QB = c(14,15,17,19:22,24,25,27:29)
Column_names_QB = colnames(Quarterback_gamelogs[Sum_Columns_QB])
Sum_Columns_RB = c(14,15,17:20,22:25)
Column_names_RB = colnames(Runningback_gamelogs[Sum_Columns_RB])
Sum_Columns_WR = c(14,15,17:20,22:25)
Column_names_WR = colnames(WideReceiver_gamelogs[Sum_Columns_WR])
Sum_Columns_K = c(14:17,19,20)
Column_names_K = colnames(Kicker_gamelogs[Sum_Columns_K])
Offensive_gamelog_QB = Quarterback_gamelogs %>%
group_by(Year, Week, Opponent, Outcome, Home.or.Away, Score) %>%
summarize(
Player.ID = paste(Player.Id, collapse = " + "),
across(Column_names_QB,sum),
) %>%
ungroup()
Column_names_QB = paste("QB_", names(Offensive_gamelog_QB)[7:18], sep = "")
names(Offensive_gamelog_QB)[7:18] = Column_names_QB
Offensive_gamelog_RB = Runningback_gamelogs %>%
group_by(Year, Week, Opponent) %>%
summarize(
Player.ID = paste(Player.Id, collapse = " + "),
across(Column_names_RB,sum),
) %>%
ungroup()
Column_names_RB = paste("RB_", names(Offensive_gamelog_RB)[4:14], sep = "")
names(Offensive_gamelog_RB)[4:14] = Column_names_RB
Offensive_gamelog_WR = WideReceiver_gamelogs %>%
group_by(Year, Week, Opponent) %>%
summarize(
Player.ID = paste(Player.Id, collapse = " + "),
across(Column_names_WR,sum),
) %>%
ungroup()
Column_names_WR = paste("WR_", names(Offensive_gamelog_WR)[4:14], sep = "")
names(Offensive_gamelog_WR)[4:14] = Column_names_WR
Offensive_gamelog_K = Kicker_gamelogs %>%
group_by(Year, Week, Opponent) %>%
summarize(
Player.ID = paste(Player.Id, collapse = " + "),
across(Column_names_K,sum),
) %>%
ungroup()
Column_names_K = paste("K_", names(Offensive_gamelog_K)[4:10], sep = "")
names(Offensive_gamelog_K)[4:10] = Column_names_K
#Combining the offensive_gamelogs
Offensive_gamelog_Combined = left_join(Offensive_gamelog_QB, Offensive_gamelog_RB %>% select(RB_Player.ID,Column_names_RB,Year,Week,Opponent), by = c("Week", "Year", "Opponent"))
Offensive_gamelog_Combined = left_join(Offensive_gamelog_Combined, Offensive_gamelog_WR %>% select(WR_Player.ID,Column_names_WR,Year,Week,Opponent), by = c("Week", "Year", "Opponent"))
Offensive_gamelog_Combined = left_join(Offensive_gamelog_Combined, Offensive_gamelog_K %>% select(K_Player.ID,Column_names_K,Year,Week,Opponent), by = c("Week", "Year", "Opponent"))
Offensive_gamelog_Combined <- Offensive_gamelog_Combined %>%
mutate_if(~!is.list(.), ~ifelse(is.na(.), 0, .))
Offensive_gamelog_Combined$Offensive.Points <- as.numeric(sub(" .*", "", Offensive_gamelog_Combined$Score))
Offensive_gamelog_Combined = Offensive_gamelog_Combined %>%
select(Year,Week,Opponent,Outcome,Score, Offensive.Points, everything())
#EVERYTHING ABOVE IS SETUP AND DATA MANIPULATION
#Explorative statistics
Stats_of_Interest = c(9:20,22:31,33:42,44:49)
correlations <- cor(Offensive_gamelog_Combined$Offensive.Points, Offensive_gamelog_Combined[Stats_of_Interest])
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passing.Yards / 100, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
# #The following chooses the stats that we want to compare across ages
# Age_stats_Columns_QB = c(15,17,20,21,24,32)
# Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#
#
#
# #Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
# plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
#   geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
#   geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
#   geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
#   geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
#   geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
#   labs(x = "Age", title = "Quarterback Statistics")
#
# #Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
# plot = plot + scale_y_continuous(
#   name = "Amount of Ints, Sacks & Rushing attempts",
#   sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
#   breaks = seq(0.5, 3.5, by = 0.5),
#   limits = c(0.5, 3.5)
# )
#
# #Adds the x-axis and shows the amount of games played on each age
# plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
#                                   labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#
# #Creates a functioning legend
# custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange")
# plot <- plot + scale_color_manual(values = custom_colors)
#
# plot = plot + theme(legend.position="top")
# # Print the plot
# print(plot)
calculate_passer_rating <- function(COMP, ATT, YDS, TD, INT) {
# Define the maximum values for each component
max_COMP <- 77
max_ATT <- 100
max_YDS <- 281.4
max_TD <- 20
max_INT <- 2.375
# Calculate the four components of the passer rating
a <- ((COMP / ATT) - 0.3) * 5
b <- ((YDS / ATT) - 3) * (0.25)
c <- (TD / ATT) * (20)
d <- 2.375 - ((INT / ATT) * (25))
# Ensure that the components are within the allowed range
a <- pmax(pmin(a, max_COMP), 0)
b <- pmax(pmin(b, max_YDS), 0)
c <- pmax(pmin(c, max_TD), 0)
d <- pmax(pmin(d, max_INT), 0)
# Ensure that a,b,c&d are below 2.375
a <- pmin(a, 2.375)
b <- pmin(b, 2.375)
c <- pmin(c, 2.375)
d <- pmax(d, 0)
# Calculate the passer rating
passer_rating <- ((a + b + c + d) / 6) * 100
return(passer_rating)
}
Quarterback_gamelogs$Passer.Rating2 = calculate_passer_rating(Quarterback_gamelogs$Passes.Completed,Quarterback_gamelogs$Passes.Attempted, Quarterback_gamelogs$Passing.Yards, Quarterback_gamelogs$TD.Passes, Quarterback_gamelogs$Ints)
Career_stats <- Quarterback_gamelogs %>%
group_by(Name) %>%
summarise(
Wins = sum(Outcome == "W"),
Amount_of_games = n(),
Passing.Yards = sum(Passing.Yards),
Passes.Completed = sum(Passes.Completed),
Passes.Attempted = sum(Passes.Attempted),
Ints = sum(Ints),
TD.Passes = sum(TD.Passes),
Offensive.Points = mean(Offensive.Points)
) %>%
filter(Amount_of_games>=5)
Career_stats$Wins[is.na(Career_stats$Wins)] = 0
Career_stats$WinPercentage = floor(Career_stats$Wins/Career_stats$Amount_of_games *100)
Career_stats$Passer.Rating = calculate_passer_rating(Career_stats$Passes.Completed,Career_stats$Passes.Attempted, Career_stats$Passing.Yards, Career_stats$TD.Passes, Career_stats$Ints)
Career_stats$games_group = cut(Career_stats$Amount_of_games,
breaks = c(-Inf, 10, 150, Inf),
labels = c("Below 10", "10-150", "Above 150"))
color_mapping = c("Below 10" = "black", "10-150" = "blue", "Above 150" = "red")
ggplot(Career_stats, aes(x = WinPercentage, y = Passer.Rating, color = games_group)) +
geom_point() +
scale_color_manual(values = color_mapping) +
labs(x = "WinPercentage", y = "Passer.Rating") +
ggtitle("Scatter Plot of Passer Rating vs. Win Percentage")
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32,33)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
geom_line(aes(y = Passer.Rating / 10, color = "Passer.Rating"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange", "Passer.Rating" = "yellow")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32,33)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
geom_line(aes(y = Passer.Rating / 10, color = "Passer.Rating2"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange", "Passer.Rating2" = "yellow")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32,33)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
geom_line(aes(y = Passer.Rating2 / 10, color = "Passer.Rating2"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange", "Passer.Rating2" = "yellow")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32,33)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
geom_line(aes(y = Passer.Rating2 / 30, color = "Passer.Rating2"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange", "Passer.Rating2" = "yellow")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
#The following code once again adds the amount of Offensive.points next to the QB stats
Quarterback_gamelogs$Offensive.Points <- as.numeric(sub(" .*", "", Quarterback_gamelogs$Score))
#The following chooses the stats that we want to compare across ages
Age_stats_Columns_QB = c(15,17,20,21,24,32,33)
Age_stats_Columns_QB = colnames(Quarterback_gamelogs[Age_stats_Columns_QB])
#This code creates a dataframe in which the amount of average stats of each quarterback of a certain age is represented. Age groups with less than 100 games are excluded as that is a to small sample size
Age_stats_QB = Quarterback_gamelogs %>%
group_by(Age) %>%
summarize(
Games = n(),
across(Age_stats_Columns_QB,mean),
) %>%
ungroup() %>%
filter(Games >= 100)
#Create a plot showing the Ints, Sacks, Rushing attempts, Passes attempted and Offensive points
plot = ggplot(data = Age_stats_QB, aes(x = Age)) +
geom_line(aes(y = Ints, color = "Ints"), linetype = "solid") +
geom_line(aes(y = Sacks, color = "Sacks"), linetype = "solid") +
geom_line(aes(y = Rushing.Attempts, color = "Rushing Attempts"), linetype = "solid") +
geom_line(aes(y = Passes.Attempted / 10, color = "Passes Attempted"), linetype = "solid") +
geom_line(aes(y = Offensive.Points / 10, color = "Offensive Points"), linetype = "solid") +
labs(x = "Age", title = "Quarterback Statistics")
#Adds a y-axis on both the left and the right. The left Y-axis corresponds with the amount of Ints, Sacks and Rushing attempts. The right corresponds with the passes attempted and the offensive points.
plot = plot + scale_y_continuous(
name = "Amount of Ints, Sacks & Rushing attempts",
sec.axis = sec_axis(trans = ~ . * 10, name = "Amount of Offensive points & Passes attempted"),
breaks = seq(0.5, 3.5, by = 0.5),
limits = c(0.5, 3.5)
)
#Adds the x-axis and shows the amount of games played on each age
plot <- plot + scale_x_continuous(breaks = Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)],
labels = paste(Age_stats_QB$Age[seq(1, nrow(Age_stats_QB), by = 4)], "(", Age_stats_QB$Games[seq(1, nrow(Age_stats_QB), by = 5)], " games)"))
#Creates a functioning legend
custom_colors <- c("Ints" = "blue", "Rushing Attempts" = "red", "Sacks" = "green", "Passes Attempted" = "purple", "Offensive Points" = "orange")
plot <- plot + scale_color_manual(values = custom_colors)
plot = plot + theme(legend.position="top")
# Print the plot
print(plot)
